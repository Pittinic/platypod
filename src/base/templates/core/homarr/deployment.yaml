resources:
  homarr-deployment:
    type: kubernetes:apps/v1:Deployment
    properties:
      metadata:
        namespace: ${k8s.namespace}
        name: ${k8s.services.prefix}${homarr.name}${k8s.services.suffix}
        labels:
          app: ${k8s.services.prefix}${homarr.name}${k8s.services.suffix}
      spec:
        selector:
          matchLabels:
            app: ${k8s.services.prefix}${homarr.name}${k8s.services.suffix}
        template:
          metadata:
            labels:
              app: ${k8s.services.prefix}${homarr.name}${k8s.services.suffix}
          spec:
            containers:
              - name: ${k8s.containers.prefix}${homarr.name}${k8s.containers.suffix}
                image: ${homarr.image}
                volumeMounts:
                - mountPath: /app
                  name: ${k8s.volumes.empty-dir.prefix}${homarr.name}-data${k8s.volumes.empty-dir.suffix}
            initContainers:
            - name: ${k8s.init-containers.prefix}${homarr.name}${k8s.init-containers.suffix}
              image: alpine/git:2.45.2
              command: ['sh', '-c', '"$${ENTRYPOINT_SCRIPT}"']
              volumeMounts:
              - mountPath: ${git-clone.mount-path}
                name: ${k8s.volumes.empty-dir.prefix}${homarr.name}-data${k8s.volumes.empty-dir.suffix}
              env:
              - name: REPOSITORY_DATA_PATH
                value: ${repository.data-path}/homarr
              - name: ENTRYPOINT_SCRIPT
                valueFrom:
                  configMapKeyRef:
                    name: ${k8s.config-map.prefix}${git-clone.name}${k8s.config-map.suffix}
                    key: entrypoint.sh
            volumes:
            - name: ${k8s.volumes.empty-dir.prefix}${homarr.name}-data${k8s.volumes.empty-dir.suffix}
              emptyDir:
                sizeLimit: 200Mi
