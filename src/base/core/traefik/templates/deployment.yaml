resources:
  traefik-deployment:
    type: kubernetes:apps/v1:Deployment
    properties:
      metadata:
        namespace: ${k8s.namespace}
        name: ${k8s.services.prefix}${traefik.name}${k8s.services.suffix}
        labels:
          app: ${k8s.services.prefix}${traefik.name}${k8s.services.suffix}
      spec:
        replicas: ${traefik.replicas-nb}
        selector:
          matchLabels:
            app: ${k8s.services.prefix}${traefik.name}${k8s.services.suffix}
        template:
          metadata:
            labels:
              app: ${k8s.services.prefix}${traefik.name}${k8s.services.suffix}
          spec:
            serviceAccountName: ${k8s.service-accounts.prefix}${traefik.name}${k8s.service-accounts.suffix}
            containers:
              - name: ${k8s.containers.prefix}${traefik.name}${k8s.containers.suffix}
                image: ${traefik.image.registry}${traefik.image.namespace}${traefik.image.repository}:${traefik.image.tag}
                args:
                  - --providers.kubernetesingress=true
                  - --providers.kubernetesingress.allowEmptyServices=true
                  - --providers.kubernetesingress.namespaces=${k8s.namespace}
                  # logging
                  - --log.level=${traefik.logging.level}
                  - --log.format=${traefik.logging.format}
                  - --accesslog
                  # letsencrypt resolver
                  - --certificatesresolvers.${traefik.tls-resolver-name}.acme.tlschallenge=true
                  - --certificatesresolvers.${traefik.tls-resolver-name}.acme.email=${acme.email}
                  - --certificatesresolvers.${traefik.tls-resolver-name}.acme.storage=${acme.storage}
                  - --certificatesresolvers.${traefik.tls-resolver-name}.acme.caserver=${acme.endpoint}
                  # entrypoints
                  - --entryPoints.${traefik.ports.https.name}.address=:${traefik.ports.https.targetPort}
